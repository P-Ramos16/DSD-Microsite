"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[437],{9927:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var t=r(4848),s=r(8453);const i={},o="Docker And Kubernetes",c={id:"The Backend Implementation/docker_kubernetes",title:"Docker And Kubernetes",description:"architecture diagram",source:"@site/docs/The Backend Implementation/5-docker_kubernetes.md",sourceDirName:"The Backend Implementation",slug:"/The Backend Implementation/docker_kubernetes",permalink:"/microsite/docs/next/The Backend Implementation/docker_kubernetes",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Databases",permalink:"/microsite/docs/next/The Backend Implementation/databases"}},l={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Docker Containers",id:"docker-containers",level:3},{value:"Docker Networks",id:"docker-networks",level:3},{value:"Docker Volumes",id:"docker-volumes",level:3},{value:"Kubernetes",id:"kubernetes",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"docker-and-kubernetes",children:"Docker And Kubernetes"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"architecture diagram",src:r(3433).A+"",width:"1920",height:"889"})})}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(n.p,{children:"The containarization technologies utilized"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#docker-and-kubernetes",children:"Docker And Kubernetes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#docker-compose",children:"Docker Compose"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#docker-containers",children:"Docker Containers"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#docker-networks",children:"Docker Networks"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#docker-volumes",children:"Docker Volumes"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#kubernetes",children:"Kubernetes"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"architecture diagram",src:r(8286).A+"",width:"1920",height:"606"})})}),"\n",(0,t.jsx)(n.p,{children:"Docker Compose was used as the primary container orchestrator."}),"\n",(0,t.jsx)(n.p,{children:"Docker Compose allows us to define all the necessary deployment parameters, such as ports, volumes and image versions."}),"\n",(0,t.jsx)(n.p,{children:"It also allows us to manage, launch and stop all the containers at once."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"docker-containers",children:"Docker Containers"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"architecture diagram",src:r(2553).A+"",width:"1920",height:"606"})})}),"\n",(0,t.jsx)(n.p,{children:"For the docarization of our application, the following containers were defined:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Application (frontend)"}),"\n",(0,t.jsx)(n.li,{children:"Api Instance (multiple can be created at once)"}),"\n",(0,t.jsx)(n.li,{children:"Load Balancer"}),"\n",(0,t.jsx)(n.li,{children:"MongoDB"}),"\n",(0,t.jsx)(n.li,{children:"MariaDB"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"docker-networks",children:"Docker Networks"}),"\n",(0,t.jsx)(n.p,{children:"Another advantage of docker compose is the ability to create multiple seperate networks between containers."}),"\n",(0,t.jsx)(n.p,{children:"In our application the following networks were created:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"frontend_network (App \u21c4 Frontend Server)"}),"\n",(0,t.jsx)(n.li,{children:"backend_network (API Instances \u21c4 Databases)"}),"\n",(0,t.jsx)(n.li,{children:"request_network (Load Balancer \u21c4 API Instances)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"docker-volumes",children:"Docker Volumes"}),"\n",(0,t.jsx)(n.p,{children:"Both the MongoDB and the Cloud Service require the usage of volumes mapped to the host's filesystem"}),"\n",(0,t.jsx)(n.p,{children:"In our application the following volumes were created:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"mongodbdata (MongoDB Data)"}),"\n",(0,t.jsx)(n.li,{children:"file-bind (Bind volume that utilizes the host's filesystem, which is then managed by the cloud server)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"architecture diagram",src:r(7069).A+"",width:"1920",height:"606"})})}),"\n",(0,t.jsx)(n.p,{children:"A Kubernetes K3s implementation was partially implemented, but would require more work to be put into it in order to be production ready."}),"\n",(0,t.jsx)(n.p,{children:"Since the final production environment will only be consitituted of a single server, the kubernete's main feature of load balancing between machines would not be of any use."}),"\n",(0,t.jsx)(n.p,{children:"The final production version will include a kubernetes file which will launch the containers and do the apropriate load balancing, but more testing must be done in order to apply the changes to production."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8286:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-compose-766664c1e24cb855ca0ee3c6bdbf5aa6.png"},2553:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-55cd06fff5815ba3d31837e367fcca3f.png"},3433:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker_all-9d49e0d302c6bb1eb0877813b260a9dc.png"},7069:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/kubernetes-c334eecdea976e729361720cfce38033.png"},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);